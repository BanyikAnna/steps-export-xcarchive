title: "Export Xcode archive"
summary: Export Xcode archive
description: |-
  Export Xcode archive.

  Exports .ipa from iOS and tvOS .xcarchive.
  Exports .app or .pkg from macOS .xcarchive.
website: https://github.com/bitrise-steplib/steps-export-archive
source_code_url: https://github.com/bitrise-steplib/steps-export-archive
support_url: https://github.com/bitrise-steplib/steps-export-archive/issues
host_os_tags:
  - osx-10.10
project_type_tags:
  - ios
  - xamarin
type_tags:
  - script
is_requires_admin_user: true
is_always_run: false
is_skippable: false
run_if: ""
deps:
  brew:
  - name: go
  apt_get:
  - name: golang
    bin_name: go
toolkit:
  go:
    package_name: github.com/bitrise-steplib/steps-export-archive
inputs:
  - ios_archive_path: 
    opts:
      title: "iOS archive path"
      summary: "iOS archive path"
      description: |-
        Path to the iOS archive (.xcarchive) which should be exported.
  - tvos_archive_path: 
    opts:
      title: "tvOS archive path"
      summary: "tvOS archive path"
      description: |-
        Path to the tvOS archive (.xcarchive) which should be exported.
  - macos_archive_path: 
    opts:
      title: "macOS archive path"
      summary: "macOS archive path"
      description: |-
        Path to the macOS archive (.xcarchive) which should be exported.
  - export_method: "auto-detect"
    opts:
      title: "Select method for export"
      summary: ""
      description: |-
        __Export option:__

        Describes how Xcode should export the archive.   
        
        If you select `auto-detect` step will figure out proper export method  
        based on provisioning profile embedded into generated xcodearchive.
      value_options:
      - "auto-detect"
      - "app-store"
      - "ad-hoc"
      - "enterprise"
      - "development"
      is_required: true
  - upload_bitcode: "yes"
    opts:
      title: "Include bitcode"
      summary: ""
      description: |-
        __Export option:__  

        For __App Store__ exports, should the package include bitcode?
      value_options:
      - "yes"
      - "no"
      is_required: true
  - compile_bitcode: "yes"
    opts:
      title: "Rebuild from bitcode"
      summary: ""
      description: |-
        __Export option:__  
        
        For __non-App Store__ exports, should Xcode re-compile the app from bitcode?
      value_options:
      - "yes"
      - "no"
      is_required: true
  - team_id: 
    opts:
      title: "The Developer Portal team to use for this export"
      summary: ""
      description: |-
        __Export option:__  
        
        The Developer Portal team to use for this export.

        Format example:

        - `1MZX23ABCD4`
  - export_format: "ipa"
    opts:
      title: Specify export format
      description: |-
        In case of iOS and tvOS archive export, you only can use ipa as export format.
        In case of macOS you can choose from app or pkg.
      value_options:
      - "ipa"
      - "app"
      - "pkg" 
      is_required: true   
  - custom_export_options_plist_content:
    opts:
      title: "Custom export options plist content"
      description: |-
        Specifies a custom export options plist content that configures archive exporting.
        If empty, step generates these options based on the embedded provisioning profile,
        with default values.

        Auto generated export options available for export methods:

        - app-store
        - ad-hoc
        - enterprise
        - development

        If step doesn't find export method based on provisioning profile, development will be use.

        Call `xcodebuild -help` for available export options.

  - use_deprecated_export: "no"
    opts:
      title: Use deprecated ipa export method?
      description: |-
        If this input is set to `yes`, step will use deprecated ipa export method.
      value_options:
      - "yes"
      - "no"
      is_required: true
  - deprecated_export_provisioning_profile_name:
    opts:
      title: Specify Provisioning Profile name to use by export
      description: |-
        If this input is empty for iOS and tvOS archives the step will use the embedded provisining profile.
        For macOS archives leaving this input empty means: let xcodebuild to grab one of the matching installed provisining profile.  
outputs:

